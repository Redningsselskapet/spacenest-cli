"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createDevSpace = void 0;
var fs_1 = require("fs");
var js_yaml_1 = require("js-yaml");
var createDevSpace = function (pkgName, pkgDirectory, config) {
    var devspaceYaml = js_yaml_1.dump(JSON.parse(devspaceJson(pkgName, config)));
    fs_1.writeFileSync(pkgDirectory + "/" + pkgName + "/devspace.yaml", devspaceYaml, "utf8");
    createDevSpaceStartup(pkgName, pkgDirectory);
};
exports.createDevSpace = createDevSpace;
var devspaceJson = function (pkgName, config) {
    return "\n  {\n    \"version\": \"v1beta10\",\n    \"images\": {\n      \"app-" + pkgName + "\": {\n        \"image\": \"" + config.containerRegistry + "/app-" + pkgName + "\",\n        \"dockerfile\": \"./Dockerfile\",\n        \"build\": {\n          \"kaniko\": {\n            \"cache\": true\n          },\n          \"disabled\": true\n        }\n      }\n    },\n    \"deployments\": [\n      {\n        \"name\": \"app-" + pkgName + "\",\n        \"kubectl\": {\n          \"manifests\": [\n            \"k8s/**\"\n          ]\n        }\n      }\n    ],\n    \"dev\": {\n      \"ports\": [\n        {\n          \"imageName\": \"app-" + pkgName + "\",\n          \"forward\": [\n            {\n              \"port\": 3000\n            }\n          ]\n        }\n      ],\n      \"open\": [\n        {\n          \"url\": \"http://localhost:3000\"\n        }\n      ],\n      \"sync\": [\n        {\n          \"imageName\": \"app-" + pkgName + "\",\n          \"disableDownload\": false,\n          \"excludePaths\": [\n            \".git/\"\n          ],\n          \"uploadExcludePaths\": [\n            \"node_modules\",\n            \"dist\",\n            \"k8s\"\n          ]\n        }\n      ],\n      \"terminal\": {\n        \"imageName\": \"app-" + pkgName + "\",\n        \"command\": [\n          \"./devspace_start.sh\"\n        ]\n      },\n      \"replacePods\": [\n        {\n          \"imageName\": \"app-" + pkgName + "\",\n          \"replaceImage\": \"loftsh/alpine:latest\",\n          \"patches\": [\n            {\n              \"op\": \"replace\",\n              \"path\": \"spec.containers[0].command\",\n              \"value\": [\n                \"sleep\"\n              ]\n            },\n            {\n              \"op\": \"replace\",\n              \"path\": \"spec.containers[0].args\",\n              \"value\": [\n                \"9999999\"\n              ]\n            },\n            {\n              \"op\": \"remove\",\n              \"path\": \"spec.containers[0].securityContext\"\n            }\n          ]\n        }\n      ]\n    },\n    \"profiles\": [\n      {\n        \"name\": \"production\",\n        \"patches\": [\n          {\n            \"op\": \"remove\",\n            \"path\": \"images.app-" + pkgName + ".build.disabled\"\n          }\n        ]\n      }\n    ]\n  }\n  ";
};
var createDevSpaceStartup = function (pkgName, pkgDirectory) {
    var colorReset = "${COLOR_RESET}";
    var color = "${COLOR_CYAN}";
    var pkg = "${PKG_NAME}";
    var version = "${PKG_VERSION}";
    var devspaceStart = "#!/bin/bash\n\nCOLOR_CYAN=\"\\033[0;36m\"\nCOLOR_RESET=\"\\033[0m\"\nPKG_NAME=$(node -pe \"require('./package.json').name\")\nPKG_VERSION=$(node -pe \"require('./package.json').version\")\n\necho -e \"" + color + "\n\u256D\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u256E\u2571\u2571\u256D\u2501\u256E\u256D\u2501\u256E\u2571\u2571\u2571\u2571\u2571\u2571\u2571\u2571\u2571\u2571\u2571\u2571\u2571\u2571\u256D\u2501\u2501\u2501\u256E\n\u2503\u256D\u2501\u256E\u2503\u256D\u2501\u256E\u2503\u2571\u2571\u2503\u2503\u2570\u256F\u2503\u2503\u2571\u2571\u2571\u2571\u2571\u2571\u2571\u2571\u2571\u2571\u2571\u2571\u2571\u2571\u2503\u256D\u2501\u256E\u2503\n\u2503\u2570\u2501\u256F\u2503\u2570\u2501\u2501\u256E\u2571\u2571\u2503\u256D\u256E\u256D\u256E\u2523\u2501\u2501\u2533\u2501\u2533\u2533\u2501\u256E\u256D\u2501\u2501\u256E\u2571\u2571\u2503\u2570\u2501\u2501\u2533\u2501\u2501\u2533\u2501\u2533\u256E\u256D\u2533\u2533\u2501\u2501\u2533\u2501\u2501\u2533\u2501\u2501\u256E\n\u2503\u256D\u256E\u256D\u253B\u2501\u2501\u256E\u2523\u2501\u2501\u252B\u2503\u2503\u2503\u2503\u2503\u256D\u256E\u2503\u256D\u254B\u252B\u256D\u256E\u252B\u2503\u2501\u254B\u2501\u2501\u254B\u2501\u2501\u256E\u2503\u2503\u2501\u252B\u256D\u252B\u2570\u256F\u2523\u252B\u256D\u2501\u252B\u2503\u2501\u252B\u2501\u2501\u252B\n\u2503\u2503\u2503\u2570\u252B\u2570\u2501\u256F\u2523\u2501\u2501\u252B\u2503\u2503\u2503\u2503\u2503\u256D\u256E\u2503\u2503\u2503\u2503\u2503\u2503\u2503\u2503\u2501\u254B\u2501\u2501\u252B\u2570\u2501\u256F\u2503\u2503\u2501\u252B\u2503\u2570\u256E\u256D\u252B\u2503\u2570\u2501\u252B\u2503\u2501\u254B\u2501\u2501\u2503\n\u2570\u256F\u2570\u2501\u253B\u2501\u2501\u2501\u256F\u2571\u2571\u2570\u256F\u2570\u256F\u2570\u253B\u256F\u2570\u253B\u256F\u2570\u253B\u256F\u2570\u253B\u2501\u2501\u256F\u2571\u2571\u2570\u2501\u2501\u2501\u253B\u2501\u2501\u253B\u256F\u2571\u2570\u256F\u2570\u253B\u2501\u2501\u253B\u2501\u2501\u253B\u2501\u2501\u256F\n" + colorReset + "\n\n" + pkg + "-" + version + " \uD83D\uDCE6\n\nVelkommen til din utviklingskontainer!\n\nDette er m\u00E5ten du kan bruke den:\n- " + color + "Filer blir synkronisert" + colorReset + " mellom din lokale maskin og denne kontaineren\n- Enkelte filer er eller kan eksluderes fra synkronisering (see devspace.yaml)\n\nnpm run install\nnpm run start:dev\n\nKos deg i utviklingsrommet! \uD83E\uDE90\n\"\n\nbash\n\n";
    fs_1.writeFileSync(pkgDirectory + "/" + pkgName + "/devspace_start.sh", devspaceStart, "utf8");
    fs_1.chmodSync(pkgDirectory + "/" + pkgName + "/devspace_start.sh", "755");
};
